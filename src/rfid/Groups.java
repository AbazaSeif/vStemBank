/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rfid;

import com.alee.laf.optionpane.WebOptionPane;
import database.DatabaseImplement;
import database.GroupList;
import database.MySqlConnections;
import database.StudentsList;
import java.awt.Color;
import java.awt.Component;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.ConcurrentModificationException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListCellRenderer;
import javax.swing.DefaultListModel;
import javax.swing.JList;

/**
 *
 * @author alienware
 */
public class Groups extends com.alee.laf.desktoppane.WebInternalFrame {

    List<GroupList> List = new ArrayList<>();
    List<StudentsList> TotalUsers = new ArrayList<>();
    List<StudentsList> ResultTecher = new ArrayList<>();
    List<StudentsList> ResultStudent = new ArrayList<>();

    /**
     * Creates new form Groups
     */
    public Groups() {
        initComponents();
        ToolesStatus(false);
        lblGroupID.setVisible(false);
        GetListOfTetchers();
    }

    private void ToolesStatus(boolean Status) {
        lblGroupID.setText("");
        txtGroupName.setText("");
        txtNewGroupName.setText("");
        txtDescriptionNewGroup.setText("");
        txtGroupDescrip.setText("");
        lstUsers.removeAll();
        btnActive.setSelected(Status);
        btnActive.setEnabled(Status);
        btnDelete.setEnabled(Status);
        webButton2.setEnabled(Status);
        btnUpdateGroup1.setEnabled(Status);
        webButton1.setEnabled(Status);
        webButton1.setRound(20);
        btnUpdateGroup1.setRound(20);
        webButton2.setRound(20);
        btnActive.setRound(20);
        webButton3.setRound(20);
    }

    public class SelectedListCellRenderer extends DefaultListCellRenderer {

        @Override
        public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
            Component c = super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
            if (isSelected) {
                c.setBackground(Color.BLACK);
                c.setForeground(Color.WHITE);
            } else {

                List.subList(0, List.size()).stream().filter((D) -> (value.equals(D.getGroupName()))).forEachOrdered((D) -> {
                    if (D.getGroupActive()) {
                        c.setBackground(Color.WHITE);
                        c.setForeground(Color.BLACK);
                    } else {
                        c.setBackground(Color.RED);
                        c.setForeground(Color.BLACK);
                    }
                });
            }
            return c;
        }
    }

    private void GetGroupList() {
        TotalUsers = new ArrayList<>();
        DefaultListModel model = new DefaultListModel();
        List = new ArrayList<>();
        List = new DatabaseImplement().getGroups();
        lstGroup.removeAll();
        lstGroup.setModel(model);
        for (int i = 0; i <= List.size() - 1; i++) {
            model.addElement(List.get(i).getGroupName());
        }
        lstGroup.setCellRenderer(new SelectedListCellRenderer());
        ToolesStatus(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnDelete = new com.alee.laf.button.WebButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstGroup = new javax.swing.JList<>();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstUsers = new javax.swing.JList<>();
        webButton1 = new com.alee.laf.button.WebButton();
        webButton2 = new com.alee.laf.button.WebButton();
        jLabel5 = new javax.swing.JLabel();
        lisNewStud = new com.alee.laf.combobox.WebComboBox();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtGroupName = new com.alee.laf.text.WebTextField();
        txtGroupDescrip = new com.alee.laf.text.WebTextField();
        lisTetchers = new com.alee.laf.combobox.WebComboBox();
        btnActive = new com.alee.laf.button.WebButton();
        btnUpdateGroup1 = new com.alee.laf.button.WebButton();
        lblGroupID = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtDescriptionNewGroup = new javax.swing.JTextPane();
        txtNewGroupName = new com.alee.laf.text.WebTextField();
        lstTetcherNewGroup = new com.alee.laf.combobox.WebComboBox();
        webButton3 = new com.alee.laf.button.WebButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        webMultiLineLabel1 = new com.alee.extended.label.WebMultiLineLabel();
        btnGetInfo = new com.alee.laf.button.WebButton();

        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rfid/icons/exit.png"))); // NOI18N
        btnDelete.setText("удалять");
        btnDelete.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        lstGroup.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstGroup.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jScrollPane1.setViewportView(lstGroup);

        jTabbedPane1.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        jTabbedPane1.setTabPlacement(javax.swing.JTabbedPane.BOTTOM);

        lstUsers.setFont(new java.awt.Font("Cantarell", 1, 18)); // NOI18N
        lstUsers.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(lstUsers);

        webButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rfid/icons/off.png"))); // NOI18N
        webButton1.setText("Удалить студента");
        webButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                webButton1ActionPerformed(evt);
            }
        });

        webButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rfid/icons/new.png"))); // NOI18N
        webButton2.setText("Добавить студента");
        webButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                webButton2ActionPerformed(evt);
            }
        });

        jLabel5.setText("ученик");

        lisNewStud.setRound(20);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(lisNewStud, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(12, 12, 12))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(103, 103, 103)
                        .addComponent(webButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(webButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel5)))
                .addContainerGap(129, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lisNewStud, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(webButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(webButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24))
        );

        jTabbedPane1.addTab("Добавить \\ Удалить пользователей", jPanel1);

        jLabel2.setText("Название группы");

        jLabel3.setText("Название предмета");

        jLabel4.setText("Описание");

        txtGroupName.setRound(20);

        txtGroupDescrip.setRound(20);

        lisTetchers.setRound(20);

        btnActive.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rfid/icons/remove.png"))); // NOI18N
        btnActive.setText("Курс завершен");
        btnActive.setPreferredSize(new java.awt.Dimension(92, 26));
        btnActive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActiveActionPerformed(evt);
            }
        });

        btnUpdateGroup1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rfid/icons/on.png"))); // NOI18N
        btnUpdateGroup1.setText("Обновить");
        btnUpdateGroup1.setPreferredSize(new java.awt.Dimension(92, 26));
        btnUpdateGroup1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateGroup1ActionPerformed(evt);
            }
        });

        lblGroupID.setText("ID");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(btnActive, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnUpdateGroup1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                        .addComponent(txtGroupDescrip, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lisTetchers, javax.swing.GroupLayout.DEFAULT_SIZE, 561, Short.MAX_VALUE)
                        .addComponent(txtGroupName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(lblGroupID))
                .addGap(29, 29, 29))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtGroupName, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lisTetchers, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtGroupDescrip, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblGroupID)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(btnActive, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnUpdateGroup1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {lisTetchers, txtGroupDescrip, txtGroupName});

        jTabbedPane1.addTab("редактировать", jPanel2);

        jLabel6.setText("Название группы");

        jLabel7.setText("Название предмета");

        jLabel8.setText("Описание");

        jScrollPane3.setViewportView(txtDescriptionNewGroup);

        txtNewGroupName.setRound(20);

        lstTetcherNewGroup.setRound(20);

        webButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rfid/icons/new.png"))); // NOI18N
        webButton3.setText("Создайте");
        webButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                webButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane3)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtNewGroupName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 590, Short.MAX_VALUE)
                        .addComponent(jLabel6)
                        .addComponent(jLabel8)
                        .addComponent(jLabel7)
                        .addComponent(lstTetcherNewGroup, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 590, Short.MAX_VALUE))
                    .addComponent(webButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lstTetcherNewGroup, txtNewGroupName});

        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNewGroupName, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lstTetcherNewGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(webButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {lstTetcherNewGroup, txtNewGroupName});

        jTabbedPane1.addTab("Создайте", jPanel5);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rfid/image/emblem-generic.png"))); // NOI18N

        webMultiLineLabel1.setText("Поиск списков и отчетов о членах и возможность изменения их полномочий");
        webMultiLineLabel1.setDrawShade(true);
        webMultiLineLabel1.setFont(webMultiLineLabel1.getFont());
        webMultiLineLabel1.setIconTextGap(6);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(webMultiLineLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addGap(5, 5, 5))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1)
            .addComponent(webMultiLineLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        btnGetInfo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rfid/icons/info.png"))); // NOI18N
        btnGetInfo.setText("Полу.инфо");
        btnGetInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGetInfoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnGetInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGap(4, 4, 4)))
                .addComponent(jTabbedPane1)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGetInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName("grouptab");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void QStudents() {
        DatabaseImplement DBI = new DatabaseImplement();
        ResultStudent.clear();
        ResultStudent = DBI.QStudents();
    }

    private void QTeachers() {
        DatabaseImplement DBI = new DatabaseImplement();
        ResultTecher.clear();
        ResultTecher = DBI.QStudents();
    }

    private void GetListOfStudints() {
        lisNewStud.removeAllItems();
        DefaultComboBoxModel DCBM = new DefaultComboBoxModel();
        lisNewStud.setModel(DCBM);
        if (ResultStudent.size() > 0) {
            ResultStudent.subList(0, ResultStudent.size()).forEach((SL) -> {
                if (SL.getisBlocked() == false) {
                    DCBM.addElement(SL.getName());
                }
            });
        }
    }

    private void GetListOfTetchers() {
        lisTetchers.removeAllItems();
        lstTetcherNewGroup.removeAllItems();
        DefaultComboBoxModel DCBM = new DefaultComboBoxModel();
        lisTetchers.setModel(DCBM);
        lstTetcherNewGroup.setModel(DCBM);
        QTeachers();
        List<StudentsList> Data = ResultTecher;
        if (Data != null) {
            Data.subList(0, Data.size()).forEach((SL) -> {
                if (SL.getisBlocked() == false) {
                    DCBM.addElement(SL.getName());
                }
            });
        }
    }

    private void GetUserList() {
        String Item = lstGroup.getSelectedValue();
        TotalUsers.clear();
        try {
            List.subList(0, List.size()).stream().filter((D) -> (Item.equals(D.getGroupName()))).forEachOrdered((D) -> {
                QStudents();
                MySqlConnections DB = new MySqlConnections();
                Map<String, String> stuHash = new HashMap<>();
                stuHash.put("groupid", String.valueOf(D.getGroupID()));
                List<List> Results = DB.get("usergroup", stuHash, java.util.Arrays.asList("userid"));
                if (Results != null) {
                    for (int x = 0; x <= Results.size() - 1; x++) {
                        DB = new MySqlConnections();
                        stuHash.clear();
                        stuHash.put("id", Results.get(x).get(0).toString());
                        List<List> UserData = DB.get("Users", stuHash, java.util.Arrays.asList("id", "name", "isBlock", "astart", "aend", "lastlogin", "created", "phonenumber", "cardid", "birthdate", "parentphone", "parentname", "notes1"));
                        for (List Result : UserData) {
                            StudentsList SL = new StudentsList();
                            SL.setUserID(Integer.parseInt(String.valueOf(Result.get(0))));
                            SL.setName(String.valueOf(Result.get(1)));
                            SL.setisBlock((Result.get(2).toString().equals("1")));
                            SL.setStartDate(String.valueOf(Result.get(3)));
                            SL.setEndDate(String.valueOf(Result.get(4)));
                            SL.setLastLogin(String.valueOf(Result.get(5)));
                            SL.setCreatedDate(String.valueOf(Result.get(6)));
                            SL.setPhoneNumber(String.valueOf(Result.get(7)));
                            SL.setCardID(String.valueOf(Result.get(8)));
                            SL.setBirthdate(String.valueOf(Result.get(9)));
                            SL.setParentPhone(String.valueOf(Result.get(10)));
                            SL.setParentName(String.valueOf(Result.get(11)));
                            SL.setNote(String.valueOf(Result.get(12)));
                            TotalUsers.add(SL);
                            for (int IndexUser = 0; IndexUser <= ResultStudent.size() - 1; IndexUser++) {
                                if (SL.getUserID() == ResultStudent.get(IndexUser).getUserID()) {
                                    ResultStudent.remove(IndexUser);
                                }
                            }
                        }
                    }

                    DefaultListModel UserModel = new DefaultListModel();
                    lstUsers.removeAll();
                    lstUsers.setModel(UserModel);
                    for (int i = 0; i <= TotalUsers.size() - 1; i++) {
                        UserModel.addElement(TotalUsers.get(i).getName());
                    }
                }

                //But Description Group
                lblGroupID.setText(String.valueOf(D.getGroupID()));
                txtGroupName.setText(Item);
                txtGroupDescrip.setText(D.getGroupDescription());
                btnActive.setSelected(!D.getGroupActive());
            });
        } catch (NullPointerException e) {
        }
    }
    private void btnGetInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGetInfoActionPerformed
        ToolesStatus(true);
        GetUserList();
        GetListOfStudints();
        GetListOfTetchers();
    }//GEN-LAST:event_btnGetInfoActionPerformed

    private void webButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_webButton1ActionPerformed
        String UserName = lstUsers.getSelectedValue();
        String Item = lstGroup.getSelectedValue();

        List.subList(0, List.size()).stream().filter((D) -> (Item.equals(D.getGroupName()))).forEachOrdered((D) -> {
            for (int x = 0; x <= TotalUsers.size() - 1; x++) {
                if (TotalUsers.get(x).getName().equals(UserName)) {
                    Map<String, String> mapWhere = new HashMap<>();
                    mapWhere.put("userid", String.valueOf(TotalUsers.get(x).getUserID()));
                    mapWhere.put("groupid", String.valueOf(D.getGroupID()));
                    MySqlConnections MySQLDB = new MySqlConnections();
                    if (MySQLDB.Delete("usergroup", mapWhere)) {
                        GetUserList();
                    } else {
                        WebOptionPane.showMessageDialog(this, "Существует ошибка", "ошибка", WebOptionPane.ERROR_MESSAGE);
                    }
                }
            }
        });
    }//GEN-LAST:event_webButton1ActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        String Item = lstGroup.getSelectedValue();
        List.subList(0, List.size()).stream().filter((D) -> (Item.equals(D.getGroupName()))).forEachOrdered((D) -> {
            Map<String, String> mapWhere = new HashMap<>();
            mapWhere.put("id", String.valueOf(D.getGroupID()));
            MySqlConnections MySQLDB = new MySqlConnections();
            if (MySQLDB.Delete("groups", mapWhere)) {
                mapWhere.clear();
                mapWhere.put("groupid", String.valueOf(D.getGroupID()));
                if (MySQLDB.Delete("usergroup", mapWhere)) {
                    GetGroupList();
                }
            } else {
                WebOptionPane.showMessageDialog(this, "Существует ошибка", "ошибка", WebOptionPane.ERROR_MESSAGE);
            }
        });
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnActiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActiveActionPerformed
        String Item = lstGroup.getSelectedValue();
        List.subList(0, List.size()).stream().filter((D) -> (Item.equals(D.getGroupName()))).forEachOrdered((D) -> {
            Map<String, String> mapWhere = new HashMap<>();
            Map<String, String> UpdateValue = new HashMap<>();
            if (D.getGroupActive()) {
                UpdateValue.put("active", "1");
            } else {
                UpdateValue.put("active", "0");
            }

            mapWhere.put("id", String.valueOf(D.getGroupID()));
            MySqlConnections MySQLDB = new MySqlConnections();
            if (MySQLDB.update("groups", UpdateValue, mapWhere)) {
                GetGroupList();
            } else {
                WebOptionPane.showMessageDialog(this, "Существует ошибка", "ошибка", WebOptionPane.ERROR_MESSAGE);
            }
        });
    }//GEN-LAST:event_btnActiveActionPerformed

    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated
        GetGroupList();
    }//GEN-LAST:event_formInternalFrameActivated

    private void btnUpdateGroup1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateGroup1ActionPerformed
        String GroupName = txtGroupName.getText();
        String Descraption = txtGroupDescrip.getText();
        String TetcherName = lisTetchers.getSelectedItem().toString();
        ResultTecher.subList(0, ResultTecher.size()).stream().filter((T) -> (TetcherName.equals(T.getName()))).forEachOrdered((T) -> {
            Map<String, String> mapWhere = new HashMap<>();
            Map<String, String> UpdateValue = new HashMap<>();
            UpdateValue.put("groupname", GroupName);
            UpdateValue.put("techid", String.valueOf(T.getUserID()));
            UpdateValue.put("description", Descraption);
            mapWhere.put("id", lblGroupID.getText());
            MySqlConnections MySQLDB = new MySqlConnections();
            if (MySQLDB.update("groups", UpdateValue, mapWhere)) {
                WebOptionPane.showMessageDialog(this, "Данные пользователя обновлены", "Выполнено", WebOptionPane.INFORMATION_MESSAGE);
                GetGroupList();
            } else {
                WebOptionPane.showMessageDialog(this, "Существует ошибка", "ошибка", WebOptionPane.ERROR_MESSAGE);
            }
        });

    }//GEN-LAST:event_btnUpdateGroup1ActionPerformed

    private void webButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_webButton2ActionPerformed
        String StuName = lisNewStud.getSelectedItem().toString();
        for (int IndexUser = 0; IndexUser <= ResultStudent.size() - 1; IndexUser++) {
            if (StuName.equals(ResultStudent.get(IndexUser).getName())) {
                int StuIndex = ResultStudent.get(IndexUser).getUserID();
                int GroupID = Integer.parseInt(lblGroupID.getText());
                Map<String, String> Data = new HashMap<>();
                MySqlConnections MySQLDB = new MySqlConnections();
                Data.put("userid", String.valueOf(StuIndex));
                Data.put("groupid", String.valueOf(GroupID));
                if (MySQLDB.set("usergroup", Data)) {
                    GetUserList();
                    GetListOfStudints();
                } else {
                    WebOptionPane.showMessageDialog(this, "Существует ошибка", "ошибка", WebOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_webButton2ActionPerformed

    private void webButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_webButton3ActionPerformed
        String GroupName = txtNewGroupName.getText();
        String GroupDescription = txtDescriptionNewGroup.getText();
        String TetcherName = lstTetcherNewGroup.getSelectedItem().toString();
        try {
            ResultTecher.subList(0, ResultTecher.size()).stream().filter((T) -> (TetcherName.equals(T.getName()))).forEachOrdered((T) -> {
                Map<String, String> UpdateValue = new HashMap<>();
                UpdateValue.put("groupname", GroupName);
                UpdateValue.put("techid", String.valueOf(T.getUserID()));
                UpdateValue.put("description", GroupDescription);
                MySqlConnections MySQLDB = new MySqlConnections();
                if (MySQLDB.set("groups", UpdateValue)) {
                    WebOptionPane.showMessageDialog(this, "Данные пользователя обновлены", "Выполнено", WebOptionPane.INFORMATION_MESSAGE);
                    ToolesStatus(true);
                    GetGroupList();
                    GetUserList();
                    GetListOfStudints();
                    GetListOfTetchers();
                } else {
                    WebOptionPane.showMessageDialog(this, "Существует ошибка", "ошибка", WebOptionPane.ERROR_MESSAGE);
                }
            });
        } catch (ConcurrentModificationException e) {
            ToolesStatus(true);
            GetGroupList();
            GetUserList();
            GetListOfStudints();
            GetListOfTetchers();
        }
    }//GEN-LAST:event_webButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.alee.laf.button.WebButton btnActive;
    private com.alee.laf.button.WebButton btnDelete;
    private com.alee.laf.button.WebButton btnGetInfo;
    private com.alee.laf.button.WebButton btnUpdateGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblGroupID;
    private com.alee.laf.combobox.WebComboBox lisNewStud;
    private com.alee.laf.combobox.WebComboBox lisTetchers;
    private javax.swing.JList<String> lstGroup;
    private com.alee.laf.combobox.WebComboBox lstTetcherNewGroup;
    private javax.swing.JList<String> lstUsers;
    private javax.swing.JTextPane txtDescriptionNewGroup;
    private com.alee.laf.text.WebTextField txtGroupDescrip;
    private com.alee.laf.text.WebTextField txtGroupName;
    private com.alee.laf.text.WebTextField txtNewGroupName;
    private com.alee.laf.button.WebButton webButton1;
    private com.alee.laf.button.WebButton webButton2;
    private com.alee.laf.button.WebButton webButton3;
    private com.alee.extended.label.WebMultiLineLabel webMultiLineLabel1;
    // End of variables declaration//GEN-END:variables
}
