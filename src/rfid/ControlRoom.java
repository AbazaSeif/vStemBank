/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rfid;

import com.alee.laf.WebLookAndFeel;
import com.alee.laf.button.WebButton;
import com.alee.laf.desktoppane.WebInternalFrame;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.beans.PropertyVetoException;
import java.io.IOException;
import java.net.URL;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JInternalFrame;

/**
 *
 * @author alienware
 */
public class ControlRoom extends javax.swing.JFrame {

    /**
     * Creates new form ControlPanel
     */
    public ControlRoom() {
        initComponents();
        WebInternalFrame addnew = new Addnewuser();
        WebInternalFrame userslist = new UsersDataDir();
        WebInternalFrame sholgroup = new Groups();
        DesktopIcon(addnew, "Новый пользователь", "newdata.png", 30);
        DesktopIcon(userslist, "Списки пользователей", "table.png", 100);
        DesktopIcon(sholgroup, "группы", "groups.png", 170);
    }

    private void DesktopIcon(WebInternalFrame window, String Label, String Icon, int LocationY) {
        final WebButton internalFrameIcon = new WebButton(Label, loadIcon(Icon));
        internalFrameIcon.setRolloverDecoratedOnly(true);
        internalFrameIcon.setHorizontalTextPosition(WebButton.CENTER);
        internalFrameIcon.setVerticalTextPosition(WebButton.BOTTOM);
        internalFrameIcon.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(final ActionEvent e) {
                if (internalFrameIcon.getClientProperty(DesktopPaneIconMoveAdapter.DRAGGED_MARK) != null) {
                    return;
                }
                if (window.isClosed()) {
                    try {
                        if (window.getParent() == null) {
                            desktopPane.add(window);
                        }

                        window.setIcon(false);
                        window.setTitle(Label);
                        window.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
                        window.setResizable(true);
                        window.setClosable(true);
                        window.setMaximizable(true);
                        window.setFocusable(true);
                        window.setSelected(true);
                        window.setDesktopIcon(new JInternalFrame.JDesktopIcon(window));
                        window.setFrameIcon(loadIcon(Icon));
                        window.setOpaque(true);
                        window.updateUI();
                        window.open();
                    } catch (PropertyVetoException ex) {
                    }
                } else {
                    window.setIcon(!window.isIcon());
                }
            }
        });
        final DesktopPaneIconMoveAdapter ma1 = new DesktopPaneIconMoveAdapter();
        internalFrameIcon.addMouseListener(ma1);
        internalFrameIcon.addMouseMotionListener(ma1);
        internalFrameIcon.setBounds(25, LocationY, 100, 75);
        desktopPane.add(internalFrameIcon);
        window.close();
        desktopPane.updateUI();
    }

    private URL getIconResource(String path) {
        return getClass().getResource("icons/" + path);
    }

    public ImageIcon loadIcon(String path) {
        return new ImageIcon(getIconResource(path));
    }

    public BufferedImage LoadImage(final String path) {
        BufferedImage image = null;
        try {
            image = ImageIO.read(getClass().getResource("image/" + path));
            return image;
        } catch (IOException e) {
            e.printStackTrace();
        }
        return null;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        webStatusBar1 = new com.alee.extended.statusbar.WebStatusBar();
        desktopPane = new com.alee.laf.desktoppane.WebDesktopPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        desktopPane.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.background"));
        desktopPane.setForeground(new java.awt.Color(187, 200, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(webStatusBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 409, Short.MAX_VALUE)
            .addComponent(desktopPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(desktopPane, javax.swing.GroupLayout.DEFAULT_SIZE, 303, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(webStatusBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        WebLookAndFeel.install();

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ControlRoom().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.alee.laf.desktoppane.WebDesktopPane desktopPane;
    private com.alee.extended.statusbar.WebStatusBar webStatusBar1;
    // End of variables declaration//GEN-END:variables

}
