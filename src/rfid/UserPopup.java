/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rfid;

import com.alee.laf.WebLookAndFeel;
import com.alee.managers.popup.PopupStyle;
import database.MySqlConnections;
import java.awt.Dimension;
import java.awt.GraphicsDevice;
import static java.awt.GraphicsDevice.WindowTranslucency.TRANSLUCENT;
import java.awt.GraphicsEnvironment;
import java.awt.Insets;
import java.awt.Toolkit;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 *
 * @author alienware
 */
public class UserPopup extends javax.swing.JFrame {

    private WindowPopUp WPU = null;
    private String AccountSession = null;
    private String LabelSession = null;
    private int Factor = 0;

    /**
     * Creates new form UserPopup
     *
     * @param AccountNumber
     */
    public UserPopup(String AccountNumber, int factor, String StadyLabel) {
        initComponents();
        this.AccountSession = AccountNumber;
        this.LabelSession = StadyLabel;
        this.Factor = factor;
        GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();
        GraphicsDevice gd = ge.getDefaultScreenDevice();
        //If translucent windows aren't supported, exit.
        if (!gd.isWindowTranslucencySupported(TRANSLUCENT)) {
            System.err.println(
                    "Translucency is not supported");
            System.exit(0);
        }
        setOpacity(0.60f);

        Dimension scrSize = Toolkit.getDefaultToolkit().getScreenSize();// size of the screen
        Insets toolHeight = Toolkit.getDefaultToolkit().getScreenInsets(getGraphicsConfiguration());// height of the task bar
        setLocation(scrSize.width - getWidth(), scrSize.height - toolHeight.bottom - getHeight());

        setAlwaysOnTop(true);
        webImage1.setImage(new helper.helper().LoadImage("popup.png"));
        popup.setPopupStyle(PopupStyle.gray);
        popup.packPopup();
        popup.setSize(70, 70);
        webImage1.setSize(70, 70);
        setSize(70, 70);
        webImage1.setTransparency(1.5f);
        getContentPane().setComponentZOrder(popup, 0);
        popup.show();
        MySqlConnections MySQLDB = new MySqlConnections();
        Map<String, String> map = new HashMap<>();
        map.put("id", "1");
        List<List> Setting = MySQLDB.get("settings", map, java.util.Arrays.asList("conductsurvey"));
        int Delay = Integer.parseInt(Setting.get(0).get(0).toString());
        long seconds = java.util.concurrent.TimeUnit.MINUTES.toMillis(Delay);
        new java.util.Timer().schedule(
                new java.util.TimerTask() {
            @Override
            public void run() {
                new voting(AccountSession).setVisible(true);
            }
        },
                seconds
        );
        //Update Student 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popup = new com.alee.managers.popup.WebPopup();
        webImage1 = new com.alee.extended.image.WebImage();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setAlwaysOnTop(true);
        setBackground(new java.awt.Color(1, 1, 1));
        setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        setUndecorated(true);
        setOpacity(0.5F);
        setResizable(false);

        popup.setForeground(new java.awt.Color(254, 254, 254));
        popup.setAnimated(true);
        popup.setMaximumSize(new java.awt.Dimension(70, 70));
        popup.setNextFocusableComponent(webImage1);
        popup.setOpaque(true);
        popup.setPopupStyle(com.alee.managers.popup.PopupStyle.graySmall);
        popup.setPreferredSize(new java.awt.Dimension(70, 70));
        popup.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                popupKeyPressed(evt);
            }
        });

        webImage1.setBackground(new java.awt.Color(254, 254, 254));
        webImage1.setMaximumSize(new java.awt.Dimension(70, 70));
        webImage1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                webImage1MouseClicked(evt);
            }
        });
        popup.add(webImage1, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(popup, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(popup, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void webImage1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_webImage1MouseClicked
        if (WPU == null) {
            WPU = new WindowPopUp(this.AccountSession, this.Factor, this.LabelSession);
            WPU.setVisible(true);
        } else {
            if (WPU.isVisible()) {
                WPU.dispose();
                WPU = null;
            } else {
                WPU = null;
                WPU = new WindowPopUp(this.AccountSession, this.Factor, this.LabelSession);
                WPU.setVisible(true);
            }
        }
    }//GEN-LAST:event_webImage1MouseClicked

    private void popupKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_popupKeyPressed
        if (WPU == null) {
            WPU = new WindowPopUp(this.AccountSession, this.Factor, this.LabelSession);
            WPU.setVisible(true);
        } else {
            if (WPU.isVisible()) {
                WPU.dispose();
                WPU = null;
            } else {
                WPU = null;
                WPU = new WindowPopUp(this.AccountSession, this.Factor, this.LabelSession);
                WPU.setVisible(true);
            }
        }
    }//GEN-LAST:event_popupKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        WebLookAndFeel.install();

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.alee.managers.popup.WebPopup popup;
    private com.alee.extended.image.WebImage webImage1;
    // End of variables declaration//GEN-END:variables
}
